<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- The following is how we load properties from 
		properties file as the value of the object's property.
		the below location property of the following tag, we determine
		the location of the properties file location. following tag in fact
		loads the properties file into the memory-->
	<context:property-placeholder location="classpath:sport.properties" />
    
    <!-- Define your beans here -->
    
    <!-- define the dependency -->
     
     
 	<bean id="myFortuneService"
		class="com.luv2code.springdemo.HappyFortuneService">
	</bean>
	
	<bean id="myCricketCoach" 
		class="com.luv2code.springdemo.CricketCoach">
		
		<!-- setup setter injection
			the following property tag is referring to the
			the CriketCoach class (dependent class) specific 
			field/instance variable/member variable. This particular
			field is an instance of the FortuneService class
			that is the CricketCoach class's dependency.
			With following tag we are determining what specific
			object of what specific class should be injected
			as the dependency in the CricketCoach object. We
			also need to set your setter method for the fortuneService
			object in CriketCoach class-->
		<property name="fortuneService" ref="myFortuneService"></property>
		
		<!-- configure this bean for literal injection.
			the difference with dependency injection is in using
			value=" " instead of ref=" ". value refers to the real
			data/value that you want to assign to the literal
			in following example the value is hard coded which 
			for just training purposes. This is not good since its not
			configurable 
		<property name="emailAddress" value="thebestcoach@luv2code.com" />
		<property name="team" value="Sunrises Hyderabad" /> -->
		
		<!-- instead hard coding the value of the properties,
			like what we did above, here we are using the properties file
			name/value pair informations. make sure that the name inside
			of the ${} is the exact same name inside the properties file-->
		<property name="emailAddress" value="${foo.email}" />
		<property name="team" value="${foo.team}" />
	</bean>
	

	<bean id="myCoach"
 		class="com.luv2code.springdemo.TrackCoach">
 		
 			<!-- set up constructor injection --> 
			<constructor-arg ref="myFortuneService" /> 	 		
 	</bean>

	
	<!--
 	<bean id="myCoach"
 		class="com.luv2code.springdemo.TennisCoach">
 	</bean>
	-->
    
	<!--
    <bean id="myCoach"
        class="com.luv2code.springdemo.BaseballCoach">         
    </bean>
    -->

</beans>